//package tcp;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;

import java.io.*;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;

/**
 * Serveur basique TCP
 */
public class ServeurTCP
{

	public static void main(String[] args) throws Exception
	{
		ServeurTCP serveurTCP = new ServeurTCP();
		serveurTCP.execute();
		
	}
		
		

	private void execute() throws IOException
	{
		//
		System.out.println("Demarrage du serveur ...");
		
		// Le serveur se declare aupres de la couche transport
		// sur le port 5099
		ServerSocket socketEcoute = new ServerSocket();
		socketEcoute.bind(new InetSocketAddress(7500));
		
		// Attente de la connexion d'un client
		System.out.println("Attente de la connexion du client ...");
		Socket socketConnexion = socketEcoute.accept();
		
		// Affichage du port et de l'ip du client 
		System.out.println("Un client est connectÃ©");
		System.out.println("IP:"+socketConnexion.getInetAddress());
		System.out.println("Port:"+socketConnexion.getPort());
		
		// Un client s'est connecte, le serveur lit le message envoye par le client (sans garantie de lire tout le message)
		byte[] bufR = new byte[2048];
		InputStream is = socketConnexion.getInputStream();
		int lenBufR = is.read(bufR);
		String message = "";
		if (lenBufR!=-1)
		{
				message = new String(bufR, 0 , lenBufR);
				System.out.println("nom du fichier reÃ§u = "+message);
		}
		
		File src = new File("/home/userir/Downloads/"+message);
		FileInputStream is2 = new FileInputStream(src);
		OutputStream os = socketConnexion.getOutputStream();
	    
	    try {
	        byte[] buffer = new byte[1024];
	        int len;
	        while ((len = is2.read(buffer)) > 0) {
	        	os.write(buffer, 0, len);
	        }
	        is.close();
	        os.close();
	    }
	    catch(IOException e){
	        e.printStackTrace();
	    }
		
		System.out.println("Message envoye = ok\n");
		
		// Fermeture de la socket de connexion
		socketConnexion.close();
		
		// Arret du serveur 
		socketEcoute.close();
		System.out.println("Arret du serveur .");
	}
		
}